---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\liudaka\AppData\Local\Temp\GoLand\___3go_build_gin_dubbogo_consumer.exe
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    io.kompose.service: web
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\liudaka\AppData\Local\Temp\GoLand\___3go_build_gin_dubbogo_consumer.exe
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\liudaka\AppData\Local\Temp\GoLand\___3go_build_gin_dubbogo_consumer.exe
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/micro-k8s-client-default: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              value: secret
          image: mysql:latest
          name: db
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\liudaka\AppData\Local\Temp\GoLand\___3go_build_gin_dubbogo_consumer.exe
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\liudaka\AppData\Local\Temp\GoLand\___3go_build_gin_dubbogo_consumer.exe
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/micro-k8s-client-default: "true"
        io.kompose.service: web
    spec:
      containers:
        - image: nginx:latest
          name: web
          ports:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

